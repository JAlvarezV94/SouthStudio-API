// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SouthStudioBlog.Models;

namespace SouthStudioBlog.Migrations
{
    [DbContext(typeof(SSBContext))]
    partial class SSBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SouthStudioBlog.Models.Job", b =>
                {
                    b.Property<int>("IdJob")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("JobCompany")
                        .HasColumnType("text");

                    b.Property<string>("JobDescription")
                        .HasColumnType("text");

                    b.Property<DateTime>("JobEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("JobPosition")
                        .HasColumnType("text");

                    b.Property<DateTime>("JobStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastModificationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LeavingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserIdUser")
                        .HasColumnType("integer");

                    b.HasKey("IdJob");

                    b.HasIndex("UserIdUser");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("SouthStudioBlog.Models.Post", b =>
                {
                    b.Property<int>("IdPost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("LastModificationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LeavingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PostAuthorIdUser")
                        .HasColumnType("integer");

                    b.Property<string>("PostContent")
                        .HasColumnType("text");

                    b.Property<DateTime>("PostCreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<List<string>>("PostImages")
                        .HasColumnType("text[]");

                    b.Property<string>("PostTiltle")
                        .HasColumnType("text");

                    b.HasKey("IdPost");

                    b.HasIndex("PostAuthorIdUser");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("SouthStudioBlog.Models.Study", b =>
                {
                    b.Property<int>("IdStudy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("LastModificationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LeavingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StudyCenter")
                        .HasColumnType("text");

                    b.Property<string>("StudyDescription")
                        .HasColumnType("text");

                    b.Property<DateTime>("StudyEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StudyStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StudyTitle")
                        .HasColumnType("text");

                    b.Property<int?>("UserIdUser")
                        .HasColumnType("integer");

                    b.HasKey("IdStudy");

                    b.HasIndex("UserIdUser");

                    b.ToTable("Studies");
                });

            modelBuilder.Entity("SouthStudioBlog.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("LastModificationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LeavingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserAka")
                        .HasColumnType("text");

                    b.Property<DateTime>("UserBirthday")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserDescription")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<string>("UserSurname")
                        .HasColumnType("text");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SouthStudioBlog.Models.Job", b =>
                {
                    b.HasOne("SouthStudioBlog.Models.User", null)
                        .WithMany("UserJobList")
                        .HasForeignKey("UserIdUser");
                });

            modelBuilder.Entity("SouthStudioBlog.Models.Post", b =>
                {
                    b.HasOne("SouthStudioBlog.Models.User", "PostAuthor")
                        .WithMany()
                        .HasForeignKey("PostAuthorIdUser");
                });

            modelBuilder.Entity("SouthStudioBlog.Models.Study", b =>
                {
                    b.HasOne("SouthStudioBlog.Models.User", null)
                        .WithMany("UserStudyList")
                        .HasForeignKey("UserIdUser");
                });
#pragma warning restore 612, 618
        }
    }
}
